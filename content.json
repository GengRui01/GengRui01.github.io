[{"title":"安装MySQL并配置环境变量(以Java8为例)","date":"2021-02-20T16:00:00.000Z","path":"article/20210221.html","text":"下载官方下载地址：MySQL :: MySQL Downloads 这是MySQL的官方下载页面，我们安装社区版的MySQL，页面下拉点击“MySQL Community (GPL) Downloads”按钮 接下来跳转到这个页面，点击下载社区版的服务器 确认我们的电脑系统，下载免安装版 此时需要注册用户并登录，我们可以点击下方的“No thanks, just start my download.”按钮跳过登录直接下载 等待压缩包下载完成即可 把下载完成的压缩包解压到指定目录下，要注意路径中不能有中文 配置初始化的my.ini文件在解压后的目录下自行创建my.ini配置文件，使用记事本打开后写入如下配置： 其中安装目录和数据库的数据的存放目录需要根据自己的安装目录进行调整，要和解压后的文件夹目录一致 12345678910111213141516171819202122232425[mysqld]# 设置3306端口port=3306# 设置mysql的安装目录basedir=###解压后的文件夹目录 例如：D:\\\\software\\mysql-8.0.23-winx64#### 设置mysql数据库的数据的存放目录datadir=###解压后的文件夹目录后加“\\Data” 例如：D:\\\\software\\mysql-8.0.23-winx64\\Data#### 允许最大连接数max_connections=200# 允许连接失败的次数。max_connect_errors=10# 服务端使用的字符集默认为utf8mb4character-set-server=utf8mb4# 创建新表时将使用的默认存储引擎default-storage-engine=INNODB# 默认使用“mysql_native_password”插件认证#mysql_native_passworddefault_authentication_plugin=mysql_native_password[mysql]# 设置mysql客户端默认字符集default-character-set=utf8mb4[client]# 设置mysql客户端连接服务端时默认使用的端口port=3306default-character-set=utf8mb4 这里需要注意我们的数据存放目录为“安装目录\\Data”，Data文件夹不需要自己创建 安装服务并初始化虽然我我们下载的是免安装版，还是要用命令安装MySQL服务并且初始化MySQL 以管理员身份打开控制台，一定要是管理员身份，否则后续部分命令会出现权限错误，点此链接查看如何以管理员身份打开CMD控制台（详解-百度经验） 转到mysql安装目录的bin目录下 使用.\\mysqld --install命令安装MySQL服务 使用.\\mysqld --initialize --console命令初始化MySQL 初始化会产生一个随机密码，需要复制下来，后面第一次登录会用到 使用net start mysql命令开启mysql的服务 使用MySQL登录命令mysql -u root -p随机密码，出现如下界面表示安装成功 使用如下SQL语句修改root用户密码 1alter user \"root\"@\"localhost\" identified by \"新的密码\"; 提示“Query OK”表示命令执行成功 退出登陆后使用新密码登录，验证密码是否修改成功 关闭控制台 配置环境变量复制MySQL安装目录下bin目录绝对路径 鼠标右键我的电脑-属性 会进入到可以查看计算机基本信息的系统页 点击左侧“高级系统设置” 会弹出“系统属性”对话框 之后点击“环境变量” 会弹出“环境变量”对话框 选中用户变量下的PATH变量，点击“编辑” 弹出“编辑环境变量”对话框 粘贴刚才复制的MySQL安装目录下bin目录绝对路径，点击确定 依次点击“环境变量”对话框和“系统属性”对话框中的确定按钮，完成MySQL环境变量配置 检测环境变量是否配置成功WIN+R键打开运行框，输入cmd点击确定打开控制台 输入mysql -u root -p自设密码验证是否可直接登录，登录成功表示配置成功","tags":[]},{"title":"安装JDK并配置环境变量(以Java8为例)","date":"2021-02-19T16:00:00.000Z","path":"article/20210220.html","text":"下载官方下载地址：JavaSE-Downloads 这是所有版本JDK的下载页面，我们安装Java8版本，往下拉找到JavaSE8，单击JDK Download 在Java SE Development Kit 8u281中找到自己的电脑版本，点击右侧下载按钮 勾选接受协议，点击下载 此时需要注册用户并登录 登录成功后会自动下载，等待安装包下载完成 安装双击打开下载好的安装包，点击下一步即可 点击“更改”可以修改安装路径，修改时要注意路径中不能有中文 也可以使用默认路径不做修改（要记住这个路径，之后配置环境变量会用到） 我们安装的JDK中已经包含了JRE，所以不需要安装“公共JRE” 点击“公共JRE”前面的下拉框，选择第三项“此功能将不可用” 选择好后如下图所示，“公共JRE”前面会变成红色的“X”，之后点击下一步 之后等待安装 安装完成会弹出如下页面，点击关闭 配置环境变量新建JAVA_HOME环境变量鼠标右键我的电脑-属性 会进入到可以查看计算机基本信息的系统页 点击左侧“高级系统设置” 会弹出“系统属性”对话框 之后点击“环境变量” 会弹出“环境变量”对话框 在用户变量下点击“新增” 新建一个用户变量，变量名为 JAVA_HOME ，变量值为刚才的安装路径，之后点击确定 编辑PATH变量选中PATH变量，点击“编辑” 弹出“编辑环境变量”对话框 新建两个PATH变量分别是%JAVA_HOME%\\bin和%JAVA_HOME%\\jre\\bin 两个PATH变量都新建好后点击确定 新建JAVA_HOME环境变量继续在“环境变量”对话框中的用户变量下点击“新增” 输入变量名CLASSPATH，变量值.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar;，点击确定 依次点击“环境变量”对话框和“系统属性”对话框中的确定按钮，完成JDK环境变量配置 检测环境变量是否配置成功WIN+R键打开运行框，输入cmd点击确定打开控制台 分别输入java -version和javac -version查看JDK版本，结果如图所示表示安装及配置成功","tags":[]},{"title":"git的安装与配置","date":"2021-02-18T16:00:00.000Z","path":"article/20210219.html","text":"下载并安装官方下载地址：Git-Downloads 安装方法：无特殊需求直接下一步即可 配置git设置Git的用户名和邮件地址（邮箱就是注册Github时候的邮箱） 12$ git config --global user.name \"gengrui01\"$ git config --global user.email \"12******09@qq.com\" Git-GitHub建立联系（SSH）删除原有SSH配置检查电脑是否有ssh配置 1$ ls -al ~/.ssh 出现下面提示表示无ssh配置 1ls: cannot access '/c/Users/HUAWEI/.ssh': No such file or directory 如果未提示上述内容表示已经有ssh配置，需要删除用户文件夹下.ssh文件夹中的所有文件 生成SSH密钥键入命令，注意这里需要输入注册Github时候的邮箱地址，停顿的地方一路回车 1$ ssh-keygen -t rsa -C \"12******09@qq.com\" 之后键入命令 12$ ssh-agent -s$ ssh-add ~/.ssh/id_rsa 如果出现如下错误 1Could not open a connection to your authentication agent. 先执行命令 1$ ssh-agent bash 再重新执行 1$ ssh-add ~/.ssh/id_rsa 添加SSH密钥到GitHub账户执行如下命令复制密钥 1$ clip &lt; ~/.ssh/id_rsa.pub 之后打开GitHubhttps://github.com/GengRui01 ，其中“GengRui01”为用户名 按下图步骤打开设置页 单击左边标签栏中的 SSH and GPG keys 打开密钥管理页 单击 New SSH key 添加SSH密钥 title可以随意输入，key直接粘贴刚才复制好的密钥即可 最后点击添加按钮完成SSH密钥添加","tags":[]},{"title":"IDEA安装破解教程(转发)","date":"2021-02-17T16:00:00.000Z","path":"article/20210218.html","text":"此文章为转载文章 原文作者：诸葛借剑 原文平台：博客园 原文链接：IDEA安装破解教程 如下是正文内容： 一、 下载安装包1.1 方式1 百度网盘链接链接：单击此处百度网盘下载 提取码：68m8 1.2 方式2 官网下载单击此处官网下载 二、 安装IDEA 双击 ideaIU-2020.1.exe 跟着图片走 安装完毕 三、 破解IDEA 在IDEA的安装路径旁 新创建一个文件夹，不要有中文。将第一步骤下载的 其他三个文件 移动到 这个新创建的文件夹中 进入启动页，把jetbrains-agent-latest.jar拖入到启动页 点击【为IDEA安装】 跟着图片走 破解完成 此文章为转载文章 原文作者：诸葛借剑 原文平台：博客园 原文链接：IDEA安装破解教程","tags":[]},{"title":"博客改版","date":"2020-07-17T16:00:00.000Z","path":"article/20200718.html","text":"改版计划及目前进度博客改版开始啦，这次的改版主要将博客主题修改为简洁轻量的BlueLake主题 博客部署在每次完成文档修改后执行如下指令完成部署（先生成后上传） 12$ hexo generate$ hexo deploy 备份每次部署完成后执行如下指令完成备份 123$ git add .$ git commit -m \"...\"$ git push 更换开发环境备份的目的是满足异地工作的需求，更换开发环境时只需要安装git和node，执行如下操作即可 安装IDEA IDEA的安装及破解方法见往期文章IDEA的安装与破解 安装git 配置git git的安装及配置方法见往期文章git的安装与配置 idea拉取Hexo-admin备份文件 安装hexo 12345$ cd Hexo-admin$ npm install -g hexo-cli$ npm install hexo$ npm install$ npm install hexo-deployer-git --save","tags":[]},{"title":"类加载机制","date":"2018-07-17T16:00:00.000Z","path":"article/20180718.html","text":"类的生命周期 加载 找到类文件（通过类的全限定名来获取定义此类的二进制字节流） 放入方法区（将这个字节流所代表的静态存储结构转化为方法区的运行时数据结构） 开个入口（生成一个代表此类的java.lang.Class对象，作为访问方法区这些数据结构的入口） 连接 校验（检查Class文件的字节流中包含的信息是否符合当前虚拟机的要求） 准备（为静态变量和静态常量分配内存，并给静态常量赋设定值，静态变量赋初始值） 解析（jvm将常量池的符号引用替换为直接引用） 初始化(为静态变量赋程序设定的初值，类只有在如下五种情况下会初始化) 使用new关键字创建类的实例，或读取或设置一个静态字段的值，或调用静态方法的时候 通过java.lang.reflect包的方法对类进行反射调用的时候，如果类没有进行过初始化，则要首先进行初始化 当初始化一个类的时候，如果发现其父类没有进行过初始化，则首先触发父类初始化 当虚拟机启动时，用户需要指定一个主类（包含main()方法的类），虚拟机会首先初始化这个类 使用jdk1.7的动态语言支持时，如果一个java.lang.invoke.MethodHandle实例最后的解析结果REFgetStatic、REFputStatic、RE_invokeStatic的方法句柄，并且这个方法句柄对应的类没有进行初始化，则需要先触发其初始化 使用 卸载 类加载器 启动类加载器(BootStrapClassLoader) 负责加载Java的核心库 是用原生代码来实现的 并不继承自java.lang.ClassLoader 扩展类加载器(ExtClassLoader) 负责加载Java的扩展库 在虚拟机实现时提供的扩展库目录里面查找并加载Java类 应用程序类加载器(AppClassLoader) 负责加载classpath路径下的Java类 一般来说 Java应用的类都是由它来完成加载的 可以通过ClassLoader.getSystemClassLoader()来获取它 用户自定义类加载器 用户根据自定义需求，自由的定制加载的逻辑 一般都继承AppClassLoader，仅仅覆盖findClass()方法，继续遵守双亲委派模型 如上四种类加载器之间存在继承关系，除了引导类加载器外，其他的加载器都可以用getParent()方法获取父类加载器 类加载机制类的加载机制是双亲委派机制，工作过程如下： 当前加载器从自己的缓存中查询是否此类已经加载，有就返回加载好的类（每个类加载器都有自己的加载缓存，已经加载的类都会放入缓存中） 当前加载器的缓存中没有找到被加载的类的时候，委托父类加载器去加载，父类加载器采用同样的策略，首先查看自己的缓存，然后委托父类的父类去加载，一直到启动类加载器 当所有的父类加载器都没有加载的时候，再由当前的类加载器加载，并将其放入它自己的缓存中，以便下次有加载请求的时候直接返回 双亲委派的优点是： 保证 Java 程序安全稳定运行，Java 核心 API 定义类型不会被随意替换。比如自己写的String.class类就不会被加载 通过带有优先级的层级关可以避免类的重复加载","tags":[]}]