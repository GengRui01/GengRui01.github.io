<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>耿锐的博客</title>
  
  <subtitle>欢迎的来到耿锐的技术小栈</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gengrui01.github.io/"/>
  <updated>2021-02-22T01:32:51.074Z</updated>
  <id>https://gengrui01.github.io/</id>
  
  <author>
    <name>耿锐</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>安装MySQL并配置环境变量(以Java8为例)</title>
    <link href="https://gengrui01.github.io/article/20210221.html"/>
    <id>https://gengrui01.github.io/article/20210221.html</id>
    <published>2021-02-20T16:00:00.000Z</published>
    <updated>2021-02-22T01:32:51.074Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>官方下载地址：<a href="https://www.mysql.com/downloads/" target="_blank" rel="noopener">MySQL :: MySQL Downloads</a> </p><p>这是MySQL的官方下载页面，我们安装社区版的MySQL，页面下拉点击“MySQL Community (GPL) Downloads”按钮</p><a id="more"></a><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/1.png" alt=""></p><p>接下来跳转到这个页面，点击下载社区版的服务器</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/2.png" alt=""></p><p>确认我们的电脑系统，下载免安装版</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/3.png" alt=""></p><p>此时需要注册用户并登录，我们可以点击下方的“No thanks, just start my download.”按钮跳过登录直接下载</p><p>等待压缩包下载完成即可</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/4.png" alt=""></p><p>把下载完成的压缩包解压到指定目录下，要注意路径中不能有中文</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/5.png" alt=""></p><h2 id="配置初始化的my-ini文件"><a href="#配置初始化的my-ini文件" class="headerlink" title="配置初始化的my.ini文件"></a>配置初始化的my.ini文件</h2><p>在解压后的目录下自行创建my.ini配置文件，使用记事本打开后写入如下配置：</p><p>其中安装目录和数据库的数据的存放目录需要根据自己的安装目录进行调整，要和解压后的文件夹目录一致</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="comment"># 设置3306端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attr">basedir</span>=<span class="comment">###解压后的文件夹目录 例如：D:\\software\mysql-8.0.23-winx64###</span></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="attr">datadir</span>=<span class="comment">###解压后的文件夹目录后加“\Data” 例如：D:\\software\mysql-8.0.23-winx64\Data###</span></span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">200</span></span><br><span class="line"><span class="comment"># 允许连接失败的次数。</span></span><br><span class="line"><span class="attr">max_connect_errors</span>=<span class="number">10</span></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为utf8mb4</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8mb4</span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br><span class="line"><span class="comment"># 默认使用“mysql_native_password”插件认证</span></span><br><span class="line"><span class="comment">#mysql_native_password</span></span><br><span class="line"><span class="attr">default_authentication_plugin</span>=mysql_native_password</span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8mb4</span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="comment"># 设置mysql客户端连接服务端时默认使用的端口</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8mb4</span><br></pre></td></tr></table></figure><p>这里需要注意我们的数据存放目录为“安装目录\Data”，Data文件夹不需要自己创建</p><h2 id="安装服务并初始化"><a href="#安装服务并初始化" class="headerlink" title="安装服务并初始化"></a>安装服务并初始化</h2><p>虽然我我们下载的是免安装版，还是要用命令安装MySQL服务并且初始化MySQL</p><p>以管理员身份打开控制台，一定要是管理员身份，否则后续部分命令会出现权限错误，点此链接查看<a href="https://jingyan.baidu.com/article/86fae346e586323c49121a00.html" target="_blank" rel="noopener">如何以管理员身份打开CMD控制台（详解-百度经验）</a></p><p>转到mysql安装目录的bin目录下</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/6.png" alt=""></p><p>使用<code>.\mysqld --install</code>命令安装MySQL服务</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/7.png" alt=""></p><p>使用<code>.\mysqld --initialize --console</code>命令初始化MySQL</p><p>初始化会产生一个随机密码，需要复制下来，后面第一次登录会用到</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/8.png" alt=""></p><p>使用<code>net start mysql</code>命令开启mysql的服务</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/9.png" alt=""></p><p>使用MySQL登录命令<code>mysql -u root -p随机密码</code>，出现如下界面表示安装成功</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/10.png" alt=""></p><p>使用如下SQL语句修改root用户密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">user</span> <span class="string">"root"</span>@<span class="string">"localhost"</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">"新的密码"</span>;</span><br></pre></td></tr></table></figure><p>提示“Query OK”表示命令执行成功</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/11.png" alt=""></p><p>退出登陆后使用新密码登录，验证密码是否修改成功</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/12.png" alt=""></p><p>关闭控制台</p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>复制MySQL安装目录下bin目录绝对路径</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/15.png" alt=""></p><p>鼠标右键我的电脑-属性 会进入到可以查看计算机基本信息的系统页</p><p>点击左侧“高级系统设置” 会弹出“系统属性”对话框</p><p>之后点击“环境变量” 会弹出“环境变量”对话框</p><p>选中用户变量下的PATH变量，点击“编辑”</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/13.png" alt=""></p><p>弹出“编辑环境变量”对话框</p><p>粘贴刚才复制的MySQL安装目录下bin目录绝对路径，点击确定</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/14.png" alt=""></p><p>依次点击“环境变量”对话框和“系统属性”对话框中的确定按钮，完成MySQL环境变量配置</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/16.png" alt=""></p><h2 id="检测环境变量是否配置成功"><a href="#检测环境变量是否配置成功" class="headerlink" title="检测环境变量是否配置成功"></a>检测环境变量是否配置成功</h2><p>WIN+R键打开运行框，输入<code>cmd</code>点击确定打开控制台</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/16.png" alt=""></p><p>输入<code>mysql -u root -p自设密码</code>验证是否可直接登录，登录成功表示配置成功</p><p><img src="https://gengrui01.github.io/picture/mysql-install-configurate/17.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;官方下载地址：&lt;a href=&quot;https://www.mysql.com/downloads/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MySQL :: MySQL Downloads&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;这是MySQL的官方下载页面，我们安装社区版的MySQL，页面下拉点击“MySQL Community (GPL) Downloads”按钮&lt;/p&gt;
    
    </summary>
    
    
      <category term="安装与配置" scheme="https://gengrui01.github.io/categories/%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>安装JDK并配置环境变量(以Java8为例)</title>
    <link href="https://gengrui01.github.io/article/20210220.html"/>
    <id>https://gengrui01.github.io/article/20210220.html</id>
    <published>2021-02-19T16:00:00.000Z</published>
    <updated>2021-02-20T11:05:06.489Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>官方下载地址：<a href="https://www.oracle.com/java/technologies/javase-downloads.html" target="_blank" rel="noopener">JavaSE-Downloads</a> </p><p>这是所有版本JDK的下载页面，我们安装Java8版本，往下拉找到JavaSE8，单击JDK Download</p><a id="more"></a><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/1.png" alt=""></p><p>在Java SE Development Kit 8u281中找到自己的电脑版本，点击右侧下载按钮</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/2.png" alt=""></p><p>勾选接受协议，点击下载</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/3.png" alt=""></p><p>此时需要注册用户并登录</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/4.png" alt=""></p><p>登录成功后会自动下载，等待安装包下载完成</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>双击打开下载好的安装包，点击下一步即可</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/5.png" alt=""></p><p>点击“更改”可以修改安装路径，修改时要注意路径中不能有中文</p><p>也可以使用默认路径不做修改（要记住这个路径，之后配置环境变量会用到）</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/6.png" alt=""></p><p>我们安装的JDK中已经包含了JRE，所以不需要安装“公共JRE”</p><p>点击“公共JRE”前面的下拉框，选择第三项“此功能将不可用”</p><p>选择好后如下图所示，“公共JRE”前面会变成红色的“X”，之后点击下一步</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/7.png" alt=""></p><p>之后等待安装</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/8.png" alt=""></p><p>安装完成会弹出如下页面，点击关闭</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/9.png" alt=""></p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><h3 id="新建JAVA-HOME环境变量"><a href="#新建JAVA-HOME环境变量" class="headerlink" title="新建JAVA_HOME环境变量"></a>新建JAVA_HOME环境变量</h3><p>鼠标右键我的电脑-属性 会进入到可以查看计算机基本信息的系统页</p><p>点击左侧“高级系统设置” 会弹出“系统属性”对话框</p><p>之后点击“环境变量” 会弹出“环境变量”对话框</p><p>在用户变量下点击“新增”</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/10.png" alt=""></p><p>新建一个用户变量，变量名为 <code>JAVA_HOME</code> ，变量值为刚才的安装路径，之后点击确定</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/11.png" alt=""></p><h3 id="编辑PATH变量"><a href="#编辑PATH变量" class="headerlink" title="编辑PATH变量"></a>编辑PATH变量</h3><p>选中PATH变量，点击“编辑”</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/12.png" alt=""></p><p>弹出“编辑环境变量”对话框</p><p>新建两个PATH变量分别是<code>%JAVA_HOME%\bin</code>和<code>%JAVA_HOME%\jre\bin</code></p><p>两个PATH变量都新建好后点击确定</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/13.png" alt=""></p><h3 id="新建JAVA-HOME环境变量-1"><a href="#新建JAVA-HOME环境变量-1" class="headerlink" title="新建JAVA_HOME环境变量"></a>新建JAVA_HOME环境变量</h3><p>继续在“环境变量”对话框中的用户变量下点击“新增”</p><p>输入变量名<code>CLASSPATH</code>，变量值<code>.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar;</code>，点击确定</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/14.png" alt=""></p><p>依次点击“环境变量”对话框和“系统属性”对话框中的确定按钮，完成JDK环境变量配置</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/15.png" alt=""></p><h2 id="检测环境变量是否配置成功"><a href="#检测环境变量是否配置成功" class="headerlink" title="检测环境变量是否配置成功"></a>检测环境变量是否配置成功</h2><p>WIN+R键打开运行框，输入<code>cmd</code>点击确定打开控制台</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/16.png" alt=""></p><p>分别输入<code>java -version</code>和<code>javac -version</code>查看JDK版本，结果如图所示表示安装及配置成功</p><p><img src="https://gengrui01.github.io/picture/jdk-install-configurate/17.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h2&gt;&lt;p&gt;官方下载地址：&lt;a href=&quot;https://www.oracle.com/java/technologies/javase-downloads.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JavaSE-Downloads&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;这是所有版本JDK的下载页面，我们安装Java8版本，往下拉找到JavaSE8，单击JDK Download&lt;/p&gt;
    
    </summary>
    
    
      <category term="安装与配置" scheme="https://gengrui01.github.io/categories/%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>git的安装与配置</title>
    <link href="https://gengrui01.github.io/article/20210219.html"/>
    <id>https://gengrui01.github.io/article/20210219.html</id>
    <published>2021-02-18T16:00:00.000Z</published>
    <updated>2021-02-19T12:32:46.683Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载并安装"><a href="#下载并安装" class="headerlink" title="下载并安装"></a>下载并安装</h2><p>官方下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git-Downloads</a> </p><p>安装方法：无特殊需求直接下一步即可</p><a id="more"></a><h2 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h2><p>设置Git的用户名和邮件地址（邮箱就是注册Github时候的邮箱）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"gengrui01"</span></span><br><span class="line">$ git config --global user.email <span class="string">"12******09@qq.com"</span></span><br></pre></td></tr></table></figure><h2 id="Git-GitHub建立联系（SSH）"><a href="#Git-GitHub建立联系（SSH）" class="headerlink" title="Git-GitHub建立联系（SSH）"></a>Git-GitHub建立联系（SSH）</h2><h3 id="删除原有SSH配置"><a href="#删除原有SSH配置" class="headerlink" title="删除原有SSH配置"></a>删除原有SSH配置</h3><p>检查电脑是否有ssh配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al ~/.ssh</span><br></pre></td></tr></table></figure><p>出现下面提示表示无ssh配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls: cannot access <span class="string">'/c/Users/HUAWEI/.ssh'</span>: No such file or directory</span><br></pre></td></tr></table></figure><p>如果未提示上述内容表示已经有ssh配置，需要删除用户文件夹下.ssh文件夹中的所有文件</p><h3 id="生成SSH密钥"><a href="#生成SSH密钥" class="headerlink" title="生成SSH密钥"></a>生成SSH密钥</h3><p>键入命令，注意这里需要输入注册Github时候的邮箱地址，停顿的地方一路回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"12******09@qq.com"</span></span><br></pre></td></tr></table></figure><p>之后键入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-agent -s</span><br><span class="line">$ ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>如果出现如下错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not open a connection to your authentication agent.</span><br></pre></td></tr></table></figure><p>先执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-agent bash</span><br></pre></td></tr></table></figure><p>再重新执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><h3 id="添加SSH密钥到GitHub账户"><a href="#添加SSH密钥到GitHub账户" class="headerlink" title="添加SSH密钥到GitHub账户"></a>添加SSH密钥到GitHub账户</h3><p>执行如下命令复制密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>之后打开GitHub<a href="https://github.com/GengRui01" target="_blank" rel="noopener">https://github.com/GengRui01</a> ，其中“GengRui01”为用户名</p><p>按下图步骤打开设置页</p><p><img src="https://gengrui01.github.io/picture/git-install-configurate/1.png" alt=""></p><p>单击左边标签栏中的 SSH and GPG keys 打开密钥管理页</p><p>单击 New SSH key 添加SSH密钥</p><p><img src="https://gengrui01.github.io/picture/git-install-configurate/2.png" alt=""></p><p>title可以随意输入，key直接粘贴刚才复制好的密钥即可</p><p><img src="https://gengrui01.github.io/picture/git-install-configurate/3.png" alt=""></p><p>最后点击添加按钮完成SSH密钥添加</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载并安装&quot;&gt;&lt;a href=&quot;#下载并安装&quot; class=&quot;headerlink&quot; title=&quot;下载并安装&quot;&gt;&lt;/a&gt;下载并安装&lt;/h2&gt;&lt;p&gt;官方下载地址：&lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Git-Downloads&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;安装方法：无特殊需求直接下一步即可&lt;/p&gt;
    
    </summary>
    
    
      <category term="安装与配置" scheme="https://gengrui01.github.io/categories/%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>IDEA安装破解教程(转发)</title>
    <link href="https://gengrui01.github.io/article/20210218.html"/>
    <id>https://gengrui01.github.io/article/20210218.html</id>
    <published>2021-02-17T16:00:00.000Z</published>
    <updated>2021-02-20T05:39:05.126Z</updated>
    
    <content type="html"><![CDATA[<p>此文章为转载文章</p><p>原文作者：<a href="https://www.cnblogs.com/heathhou/" target="_blank" rel="noopener">诸葛借剑</a></p><p>原文平台：<a href="https://www.cnblogs.com/" target="_blank" rel="noopener">博客园</a></p><p>原文链接：<a href="https://www.cnblogs.com/heathhou/p/14017570.html" target="_blank" rel="noopener">IDEA安装破解教程</a></p><a id="more"></a><p>如下是正文内容：</p><hr><h2 id="一、-下载安装包"><a href="#一、-下载安装包" class="headerlink" title="一、 下载安装包"></a>一、 下载安装包</h2><h3 id="1-1-方式1-百度网盘链接"><a href="#1-1-方式1-百度网盘链接" class="headerlink" title="1.1 方式1 百度网盘链接"></a>1.1 方式1 百度网盘链接</h3><p>链接：<a href="https://pan.baidu.com/s/1EomVhSv1dy2znZEhMM-bYw" target="_blank" rel="noopener">单击此处百度网盘下载</a></p><p>提取码：68m8</p><p><img src="https://gengrui01.github.io/picture/idea-install-crack/1.png" alt=""></p><h3 id="1-2-方式2-官网下载"><a href="#1-2-方式2-官网下载" class="headerlink" title="1.2 方式2 官网下载"></a>1.2 方式2 官网下载</h3><p><a href="https://www.jetbrains.com/idea/download/#section=windows" target="_blank" rel="noopener">单击此处官网下载</a></p><h2 id="二、-安装IDEA"><a href="#二、-安装IDEA" class="headerlink" title="二、 安装IDEA"></a>二、 安装IDEA</h2><ol><li>双击 ideaIU-2020.1.exe</li></ol><p><img src="https://gengrui01.github.io/picture/idea-install-crack/2.png" alt=""></p><ol start="2"><li>跟着图片走</li></ol><p><img src="https://gengrui01.github.io/picture/idea-install-crack/3.png" alt=""></p><p><img src="https://gengrui01.github.io/picture/idea-install-crack/4.png" alt=""></p><p><img src="https://gengrui01.github.io/picture/idea-install-crack/5.png" alt=""></p><p><img src="https://gengrui01.github.io/picture/idea-install-crack/6.png" alt=""></p><p><img src="https://gengrui01.github.io/picture/idea-install-crack/7.png" alt=""></p><p><img src="https://gengrui01.github.io/picture/idea-install-crack/8.png" alt=""></p><p><img src="https://gengrui01.github.io/picture/idea-install-crack/9.png" alt=""></p><ol start="3"><li>安装完毕</li></ol><h2 id="三、-破解IDEA"><a href="#三、-破解IDEA" class="headerlink" title="三、 破解IDEA"></a>三、 破解IDEA</h2><ol><li>在IDEA的安装路径旁 新创建一个文件夹，不要有中文。将第一步骤下载的 其他三个文件 移动到 这个新创建的文件夹中</li></ol><p><img src="https://gengrui01.github.io/picture/idea-install-crack/10.png" alt=""></p><ol start="2"><li>进入启动页，把jetbrains-agent-latest.jar拖入到启动页</li></ol><p><img src="https://gengrui01.github.io/picture/idea-install-crack/11.png" alt=""></p><ol start="3"><li>点击【为IDEA安装】</li></ol><p><img src="https://gengrui01.github.io/picture/idea-install-crack/12.png" alt=""></p><ol start="4"><li>跟着图片走</li></ol><p><img src="https://gengrui01.github.io/picture/idea-install-crack/13.png" alt=""></p><p><img src="https://gengrui01.github.io/picture/idea-install-crack/14.png" alt=""></p><p><img src="https://gengrui01.github.io/picture/idea-install-crack/15.png" alt=""></p><ol start="5"><li>破解完成</li></ol><hr><p>此文章为转载文章</p><p>原文作者：<a href="https://www.cnblogs.com/heathhou/" target="_blank" rel="noopener">诸葛借剑</a></p><p>原文平台：<a href="https://www.cnblogs.com/" target="_blank" rel="noopener">博客园</a></p><p>原文链接：<a href="https://www.cnblogs.com/heathhou/p/14017570.html" target="_blank" rel="noopener">IDEA安装破解教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此文章为转载文章&lt;/p&gt;
&lt;p&gt;原文作者：&lt;a href=&quot;https://www.cnblogs.com/heathhou/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;诸葛借剑&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原文平台：&lt;a href=&quot;https://www.cnblogs.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;博客园&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&quot;https://www.cnblogs.com/heathhou/p/14017570.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;IDEA安装破解教程&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="安装与配置" scheme="https://gengrui01.github.io/categories/%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>博客改版</title>
    <link href="https://gengrui01.github.io/article/20200718.html"/>
    <id>https://gengrui01.github.io/article/20200718.html</id>
    <published>2020-07-17T16:00:00.000Z</published>
    <updated>2021-02-19T12:32:46.711Z</updated>
    
    <content type="html"><![CDATA[<h2 id="改版计划及目前进度"><a href="#改版计划及目前进度" class="headerlink" title="改版计划及目前进度"></a>改版计划及目前进度</h2><p>博客改版开始啦，这次的改版主要将博客主题修改为简洁轻量的<a href="https://github.com/chaooo/hexo-theme-BlueLake" target="_blank" rel="noopener">BlueLake</a>主题</p><a id="more"></a><h2 id="博客部署"><a href="#博客部署" class="headerlink" title="博客部署"></a>博客部署</h2><p>在每次完成文档修改后执行如下指令完成部署（先生成后上传）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><p>每次部署完成后执行如下指令完成备份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">"..."</span></span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure><h2 id="更换开发环境"><a href="#更换开发环境" class="headerlink" title="更换开发环境"></a>更换开发环境</h2><p>备份的目的是满足异地工作的需求，更换开发环境时只需要安装git和node，执行如下操作即可</p><ol><li>安装IDEA</li></ol><p>IDEA的安装及破解方法见往期文章<a href="https://gengrui01.github.io/article/20210218.html">IDEA的安装与破解</a></p><ol start="2"><li>安装git 配置git</li></ol><p>git的安装及配置方法见往期文章<a href="https://gengrui01.github.io/article/20210219.html">git的安装与配置</a></p><ol start="3"><li><p>idea拉取Hexo-admin备份文件</p></li><li><p>安装hexo</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> Hexo-admin</span><br><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ npm install hexo</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;改版计划及目前进度&quot;&gt;&lt;a href=&quot;#改版计划及目前进度&quot; class=&quot;headerlink&quot; title=&quot;改版计划及目前进度&quot;&gt;&lt;/a&gt;改版计划及目前进度&lt;/h2&gt;&lt;p&gt;博客改版开始啦，这次的改版主要将博客主题修改为简洁轻量的&lt;a href=&quot;https://github.com/chaooo/hexo-theme-BlueLake&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;BlueLake&lt;/a&gt;主题&lt;/p&gt;
    
    </summary>
    
    
      <category term="博客相关" scheme="https://gengrui01.github.io/categories/%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>类加载机制</title>
    <link href="https://gengrui01.github.io/article/20180718.html"/>
    <id>https://gengrui01.github.io/article/20180718.html</id>
    <published>2018-07-17T16:00:00.000Z</published>
    <updated>2021-02-19T12:32:46.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="类的生命周期"><a href="#类的生命周期" class="headerlink" title="类的生命周期"></a>类的生命周期</h2><ul><li>加载<ol><li>找到类文件（通过类的全限定名来获取定义此类的二进制字节流）</li><li>放入方法区（将这个字节流所代表的静态存储结构转化为方法区的运行时数据结构）</li><li>开个入口（生成一个代表此类的java.lang.Class对象，作为访问方法区这些数据结构的入口）</li></ol></li></ul><a id="more"></a><ul><li>连接<ol><li>校验（检查Class文件的字节流中包含的信息是否符合当前虚拟机的要求）</li><li>准备（为静态变量和静态常量分配内存，并给静态常量赋设定值，静态变量赋初始值）</li><li>解析（jvm将常量池的符号引用替换为直接引用）</li></ol></li><li>初始化(为静态变量赋程序设定的初值，类只有在如下五种情况下会初始化)<ul><li>使用new关键字创建类的实例，或读取或设置一个静态字段的值，或调用静态方法的时候</li><li>通过java.lang.reflect包的方法对类进行反射调用的时候，如果类没有进行过初始化，则要首先进行初始化</li><li>当初始化一个类的时候，如果发现其父类没有进行过初始化，则首先触发父类初始化</li><li>当虚拟机启动时，用户需要指定一个主类（包含main()方法的类），虚拟机会首先初始化这个类</li><li>使用jdk1.7的动态语言支持时，如果一个java.lang.invoke.MethodHandle实例最后的解析结果REFgetStatic、REFputStatic、RE_invokeStatic的方法句柄，并且这个方法句柄对应的类没有进行初始化，则需要先触发其初始化</li></ul></li><li>使用</li><li>卸载</li></ul><h2 id="类加载器"><a href="#类加载器" class="headerlink" title="类加载器"></a>类加载器</h2><ol><li>启动类加载器(BootStrapClassLoader)<ul><li>负责加载Java的核心库</li><li>是用原生代码来实现的</li><li>并不继承自java.lang.ClassLoader</li></ul></li><li>扩展类加载器(ExtClassLoader)<ul><li>负责加载Java的扩展库</li><li>在虚拟机实现时提供的扩展库目录里面查找并加载Java类</li></ul></li><li>应用程序类加载器(AppClassLoader)<ul><li>负责加载classpath路径下的Java类</li><li>一般来说 Java应用的类都是由它来完成加载的</li><li>可以通过ClassLoader.getSystemClassLoader()来获取它</li></ul></li><li>用户自定义类加载器<ul><li>用户根据自定义需求，自由的定制加载的逻辑</li><li>一般都继承AppClassLoader，仅仅覆盖findClass()方法，继续遵守双亲委派模型</li></ul></li></ol><p>如上四种类加载器之间存在继承关系，除了引导类加载器外，其他的加载器都可以用getParent()方法获取父类加载器</p><h2 id="类加载机制"><a href="#类加载机制" class="headerlink" title="类加载机制"></a>类加载机制</h2><p>类的加载机制是双亲委派机制，工作过程如下：</p><ol><li>当前加载器从自己的缓存中查询是否此类已经加载，有就返回加载好的类（每个类加载器都有自己的加载缓存，已经加载的类都会放入缓存中）</li><li>当前加载器的缓存中没有找到被加载的类的时候，委托父类加载器去加载，父类加载器采用同样的策略，首先查看自己的缓存，然后委托父类的父类去加载，一直到启动类加载器</li><li>当所有的父类加载器都没有加载的时候，再由当前的类加载器加载，并将其放入它自己的缓存中，以便下次有加载请求的时候直接返回</li></ol><p>双亲委派的优点是：</p><ol><li>保证 Java 程序安全稳定运行，Java 核心 API 定义类型不会被随意替换。比如自己写的String.class类就不会被加载</li><li>通过带有优先级的层级关可以避免类的重复加载</li></ol><p><img src="https://gengrui01.github.io/picture/jvm-class-loading/1.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;类的生命周期&quot;&gt;&lt;a href=&quot;#类的生命周期&quot; class=&quot;headerlink&quot; title=&quot;类的生命周期&quot;&gt;&lt;/a&gt;类的生命周期&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;加载&lt;ol&gt;
&lt;li&gt;找到类文件（通过类的全限定名来获取定义此类的二进制字节流）&lt;/li&gt;
&lt;li&gt;放入方法区（将这个字节流所代表的静态存储结构转化为方法区的运行时数据结构）&lt;/li&gt;
&lt;li&gt;开个入口（生成一个代表此类的java.lang.Class对象，作为访问方法区这些数据结构的入口）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="JVM" scheme="https://gengrui01.github.io/categories/JVM/"/>
    
    
  </entry>
  
</feed>
